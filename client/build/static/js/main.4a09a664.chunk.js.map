{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initalState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a09a664.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n\nexport default Header","// eslint-disable-next-line\nexport default (state, action) => {\n    switch (action.type) {\n        case 'GET_TRANSACTIONS':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            }\n        case 'TRANSACTION_ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }        \n        default:\n            return state\n    }\n}","import React, { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\nimport axios from 'axios'\n\n// Initial state\nconst initalState = {\n    transactions: [],\n    error: null,\n    loading: true\n}\n\n// Create context\nexport const GlobalContext = createContext(initalState)\n\n//  Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initalState)\n\n    // Actions\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/transactions')\n\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            })\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            })\n        }\n    }\n\n    async function deleteTransaction(id) {\n        try {\n           await axios.delete(`/api/v1/transactions/${id}`) \n\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            })\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            })\n        }\n        \n    }\n\n    async function addTransaction(transaction) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/v1/transactions', transaction, config)\n            \n            dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: res.data.data\n            })\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            })\n        }\n        \n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            getTransactions,\n            error: state.error,\n            loading: state.loading,\n            deleteTransaction,\n            addTransaction\n        }}>\n            { children }\n        </GlobalContext.Provider>\n    )\n}","export function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n}","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { numberWithCommas } from '../utils/format'\n\nconst Balance = () => {\n    const { transactions } = useContext(GlobalContext)\n\n    const amounts = transactions.map(transaction => transaction.amount)\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2)\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>${numberWithCommas(total)}</h1>\n        </>\n    )\n}\n\nexport default Balance","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from '../utils/format'\n\nconst IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${numberWithCommas(income)}</p>\n      </div>\n      <div>\n        <h4>Expenses</h4>\n        <p className=\"money minus\">${numberWithCommas(expense)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { numberWithCommas } from '../utils/format'\n\nconst Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <>\n      <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n        {transaction.text}{\" \"}\n        <span>\n          {sign}${numberWithCommas(Math.abs(transaction.amount))}\n        </span>\n        <button\n          className=\"delete-btn\"\n          onClick={() => deleteTransaction(transaction._id)}\n        >\n          X\n        </button>\n      </li>\n    </>\n  );\n};\n\nexport default Transaction;\n","import React, { useContext, useEffect } from 'react'\nimport Transaction from './Transaction'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst TransactionList = () => {\n    const { transactions, getTransactions } = useContext(GlobalContext)\n    \n    useEffect(() => {\n        getTransactions()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <>\n            <h4>History</h4>\n            <ul className=\"list\">\n                {transactions.map(transaction => (<Transaction  key={transaction.id} transaction={transaction}/>))}                \n            </ul>\n        </>\n    )\n}\n\nexport default TransactionList","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from '../context/GlobalState';\n\nconst AddTransaction = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n      e.preventDefault();\n\n      const newTransaction = {\n          id: Math.floor(Math.random() * 10000),\n          text,\n          amount: +amount\n        };\n        addTransaction(newTransaction);\n  }  \n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransaction;\n","import './App.css'\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses'\nimport TransactionList from './components/TransactionList'\nimport AddTransaction from './components/AddTransaction'\n\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}